{"version":3,"names":["echarts","require","none","_sfc_main","data","bills","categories","name","color","type","viewType","currentYear","Date","getFullYear","years","pieChartInstance","barChartInstance","mounted","methods","init","loadEcharts","loadBills","initYears","drawPieChart","drawBarChart","storedBills","common_vendor","index","getStorageSync","minYear","Math","min","apply","_toConsumableArray2","map","bill","date","maxYear","year","push","setViewType","onYearChange","e","detail","value","_this","query","createSelectorQuery","in","select","fields","node","size","exec","res","canvas","getContext","width","height","dispose","devicePixelRatio","getSystemInfoSync","pixelRatio","updatePieChart","option","title","text","left","tooltip","trigger","legend","orient","series","radius","monthlyData","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","setOption","_this2","updateBarChart","months","yearlyData","concat","axisPointer","top","xAxis","yAxis","stack","label","show","focus","item","income","expense","computed","month","getMonth","filteredBills","filter","billDate","categoryTotals","forEach","category","Number","amount","Object","keys","monthlyTotals","Array","fill","monthIndex","total","wx","createPage","MiniProgramPage"],"sources":["statistics.vue","D:/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvc3RhdGlzdGljcy9zdGF0aXN0aWNzLnZ1ZQ"],"sourcesContent":["<template>\n  <view class=\"statistics-container\">\n    <!-- 统计图表 -->\n    <l-echart ref=\"chartRef\" @finished=\"init\" style=\"width: 100%; height: 400px;\"></l-echart>\n  </view>\n</template>\n\n<script>\t\r\n\r\nconst echarts = require('../../uni_modules/lime-echart/static/echarts.min');\r\nconst chart=none;\nexport default {\n  data() {\n    return {\n      bills: [], // 用来存储账单数据\n      categories: [\n        { name: '购物', color: '#ff6b6b', type: 'expense' },\n        { name: '餐饮', color: '#48dbfb', type: 'expense' },\n        { name: '交通', color: '#f368e0', type: 'expense' },\n        { name: '娱乐', color: '#ff9f1c', type: 'expense' },\n        { name: '房屋', color: '#eb3b5a', type: 'expense' },\n        { name: '工资', color: '#1dd1a1', type: 'income' },\n        { name: '奖金', color: '#2ecc71', type: 'income' }\n      ],\n      viewType: 'monthly', // 默认显示当月统计\n      currentYear: new Date().getFullYear(),\n      years: [], // 存储可选择的年份\n      pieChartInstance: null,\n      barChartInstance: null\n    };\n  },\n  mounted() {\n   \n  },\n  methods: {\t  \r\n\tinit(){\r\n\t\tthis.loadEcharts();\r\n\t\tthis.loadBills();\r\n\t\tthis.initYears();\t\t\t  \r\n\t},\n    loadEcharts() {\n      // 使用微信小程序的 require 方法加载 echarts\n      \n      if (this.viewType === 'monthly') {\n        this.drawPieChart();\n      } else {\n        this.drawBarChart();\n      }\n    },\n    loadBills() {\n      const storedBills = uni.getStorageSync('bills') || [];\n      this.bills = storedBills;\n    },\n    initYears() {\n      const minYear = Math.min(...this.bills.map(bill => new Date(bill.date).getFullYear()));\n      const maxYear = new Date().getFullYear();\n      for (let year = minYear; year <= maxYear; year++) {\n        this.years.push(year);\n      }\n    },\n    setViewType(type) {\n      this.viewType = type;\n      if (type === 'monthly') {\n        this.drawPieChart();\n      } else if (type === 'yearly') {\n        this.drawBarChart();\n      }\n    },\n    onYearChange(e) {\n      this.currentYear = this.years[e.detail.value];\n      this.drawBarChart();\n    },\n    drawPieChart() {\n      const query = uni.createSelectorQuery().in(this);\n      query.select('#pieChart').fields({ node: true, size: true }).exec((res) => {\n        if (res[0] && res[0].node) {\n          const canvas = res[0].node;\n          const ctx = canvas.getContext('2d');\n          const width = res[0].width;\n          const height = res[0].height;\n\n          if (this.pieChartInstance) {\n            this.pieChartInstance.dispose();\n          }\n\n          this.pieChartInstance = echarts.init(canvas, null, {\n            width: width,\n            height: height,\n            devicePixelRatio: uni.getSystemInfoSync().pixelRatio\n          });\n\n          this.updatePieChart();\n        }\n      });\n    },\n    updatePieChart() {\n      const option = {\n        title: {\n          text: '当月账单分类统计',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [\n          {\n            name: '金额',\n            type: 'pie',\n            radius: '50%',\n            data: this.monthlyData,\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      };\n      this.pieChartInstance.setOption(option);\n    },\n    drawBarChart() {\n      const query = uni.createSelectorQuery().in(this);\n      query.select('#barChart').fields({ node: true, size: true }).exec((res) => {\n        if (res[0] && res[0].node) {\n          const canvas = res[0].node;\n          const ctx = canvas.getContext('2d');\n          const width = res[0].width;\n          const height = res[0].height;\n\n          if (this.barChartInstance) {\n            this.barChartInstance.dispose();\n          }\n\n          this.barChartInstance = echarts.init(canvas, null, {\n            width: width,\n            height: height,\n            devicePixelRatio: uni.getSystemInfoSync().pixelRatio\n          });\n\n          this.updateBarChart();\n        }\n      });\n    },\n    updateBarChart() {\n      const months = ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'];\n      const data = this.yearlyData;\n\n      const option = {\n        title: {\n          text: `${this.currentYear}年每月收支统计`,\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        legend: {\n          data: ['收入', '支出'],\n          top: '10%'\n        },\n        xAxis: {\n          type: 'category',\n          data: months\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [\n          {\n            name: '收入',\n            type: 'bar',\n            stack: 'total',\n            label: {\n              show: true\n            },\n            emphasis: {\n              focus: 'series'\n            },\n            data: data.map(item => item.income)\n          },\n          {\n            name: '支出',\n            type: 'bar',\n            stack: 'total',\n            label: {\n              show: true\n            },\n            emphasis: {\n              focus: 'series'\n            },\n            data: data.map(item => item.expense)\n          }\n        ]\n      };\n\n      this.barChartInstance.setOption(option);\n    }\n  },\n  computed: {\n    monthlyData() {\n      const year = new Date().getFullYear();\n      const month = new Date().getMonth();\n      const filteredBills = this.bills.filter(bill => {\n        const billDate = new Date(bill.date);\n        return billDate.getFullYear() === year && billDate.getMonth() === month;\n      });\n\n      const categoryTotals = {};\n      filteredBills.forEach(bill => {\n        if (!categoryTotals[bill.category]) {\n          categoryTotals[bill.category] = 0;\n        }\n        categoryTotals[bill.category] += Number(bill.amount);\n      });\n\n      return Object.keys(categoryTotals).map(category => ({\n        name: category,\n        value: categoryTotals[category]\n      }));\n    },\n    yearlyData() {\n      const year = this.currentYear;\n      const filteredBills = this.bills.filter(bill => {\n        const billDate = new Date(bill.date);\n        return billDate.getFullYear() === year;\n      });\n\n      const monthlyTotals = Array(12).fill({ income: 0, expense: 0 });\n      filteredBills.forEach(bill => {\n        const monthIndex = new Date(bill.date).getMonth();\n        if (Number(bill.amount) > 0) {\n          monthlyTotals[monthIndex].income += Number(bill.amount);\n        } else {\n          monthlyTotals[monthIndex].expense -= Number(bill.amount);\n        }\n      });\n\n      return monthlyTotals.map((total, index) => ({\n        month: index + 1,\n        income: total.income,\n        expense: total.expense\n      }));\n    }\n  }\n};\n</script>\n<style scoped>\n/* 整体容器样式 */\n.statistics-container {\n  padding: 20px;\n  background-color: #f5f5f5;\n  height: calc(100vh - 60px); /* 减去底部导航栏的高度 */\n  box-sizing: border-box;\n}\n\n</style>\n","import MiniProgramPage from 'E:/HBuilderProjects/BillRecord/pages/statistics/statistics.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}